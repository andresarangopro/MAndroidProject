import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

public class main {
	public static void main(String[] args)throws Exception{
		login();
		
	}

	private static String inStream2String(InputStream is) throws Exception {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		byte[] buf = new byte[1024];
		int len = -1;
		while ((len = is.read(buf)) != -1) {
			baos.write(buf, 0, len);
		}
		return new String(baos.toByteArray());
	}

	private static void login() throws Exception {

		//api地址
		String apiUrl = "http://192.168.8.253:8080/hdwapi/";

		//api方法
		String apiMethod = "api/takeStockType/list";
//		String apiMethod = "api/security/login";

		//JSON数据
		String reqeustJsonData = "{ \"businessModuleCode\" : \"HDW\", \"accountType\":\"EMPLOYEE\", \"username\": \"admin\",\"password\": \"admin\"}";

		String postUrl = apiUrl + apiMethod;
		OutputStreamWriter outputStreamWriter = null;
		BufferedReader inReader = null;
		String result = "";
		HttpURLConnection conn = null;
		try {
			URL realUrl = new URL(postUrl);
			// 打开和URL之间的连接
			conn = (HttpURLConnection) realUrl.openConnection();
			// 设置通用的请求属性
			conn.setRequestProperty("accept", "*/*");
			conn.setRequestProperty("connection", "Keep-Alive");
			conn.setRequestProperty("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
			// MIME属性设置,类型=任意流
			conn.setRequestProperty("Content-type", "application/json;charset=utf-8");
//			conn.setRequestProperty("apikey","5a3e93bd-b8dd-4d1a-afb1-731d15fb2e4c");
			// 发送POST请求必须设置如下两行
			conn.setDoOutput(true);
			conn.setDoInput(true);
			// 获取URLConnection对象对应的输出流
			outputStreamWriter = new OutputStreamWriter(conn.getOutputStream(), "UTF-8");
			// 发送请求参数
			outputStreamWriter.write(reqeustJsonData);
			// flush输出流的缓冲
			outputStreamWriter.flush();
			outputStreamWriter.close();

			// InputStream输入流来读取URL的响应
			InputStream inputStream = conn.getInputStream();
			result = "提交成功,响应信息:" + inStream2String(inputStream);
		} catch (IOException ex) {
			if (conn != null) {

				//获取http状态码
				int statusCode = conn.getResponseCode();

				//从连接错误流获取返回错误信息
				String errorMsg = inStream2String(conn.getErrorStream());

				result = "提交失败,错误状态码:" + statusCode + ",错误信息:" + errorMsg;

			} else {
				throw ex;
			}
		}

		// 使用finally块来关闭输出流、输入流
		finally {
			try {
				if (outputStreamWriter != null) {
					outputStreamWriter.close();
				}
				if (inReader != null) {
					inReader.close();
				}
			} catch (IOException ex) {
				ex.printStackTrace();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		System.out.println(result);
	}

}
